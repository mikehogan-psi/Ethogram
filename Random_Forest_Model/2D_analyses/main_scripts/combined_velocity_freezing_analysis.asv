%% Combined analysis aproach for more accurate freezing predictions\

% this scripts allows a ....

%% Step 0: General SETUP 

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% % !!! CHANGE/ ADJUST THESE AS NECCECSARY !!!%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% 1. Define variables that remain concistent throughout entire analyses

     % A: mouse part that shall be analysied (depends on behaviour that will be investigated)
            which_part = 'body';    % for behaviours that entail changes in body posture e.g. rearing
            % which_part = 'tail';  % for behaviours that entail changes in tail movements e.g. tail rattling 

     % B: define target behaviour that shall be analysed
            behaviour = 'freezing';  

     % C: define which name generated models shall be given
            SSM_model_name = ['SSM_mouse1_30' which_part];      % Can be left out if SSM fitted data already generated
            RFM_model_name = ['RFM_' behaviour '_with_velocity_TH'];      % this model will be used to predict behaviour -> folders in which behavioral data is stored is named after the model
                                                                % !!! make a note of all the configurations used for this model (see Random forest model configurations document)                                                                
                             
                                                                
% 2. Define directories to where specific data can be accessed/saved 
     % A: folder containing 'raw' data from all mice (data before any behaviours predicted)  
            % common_raw_dir = 'C:\Abi_Hogan\behavioral_analysis\data_all_mice\'; % Stopford PC
            common_raw_dir = 'C:\Users\Abi Hogan\Documents\Psychedelics_Internship\behavior_analysis\data_all_mice'; % Laptop

     % subdirectories containing video and DLC data (must be already defined) + folder where SSM fitted data shall be saved 
            % ! make sure these folders already exist and contain correct data prior to starting analysis !
            video_path    = [common_raw_dir '\video_data\video_data_extinction\'];               % raw video data (videos of mice) 
            DLC_data_path = [common_raw_dir '\DLC_data\DLC_extinction_Data'];                    % DLC data(coordinates of body label markers generated by DeepLabCut 
            SSM_data_path = [common_raw_dir '\SSM_fitted_data\SSM_fitted_data_extinction\'];     % SSM fitted data (2D-Upper generated data - corrected body marker positions and mean/eigenpose data)
      
     % B: folder where data labeled with desired behaviour shall be saved   
            % common_behav_dir = 'C:\Abi_Hogan\behavioral_analysis\extinction_analysis\rearing_data\';  % Stopford PC
              common_behav_dir = 'C:\Users\Abi Hogan\Documents\Psychedelics_Internship\behavior_analysis\extinction_analysis'; % Laptop


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% % ! will be automatically created for each new analyses (based on the previous definitions !%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

 % 1. subdirectories containing behaviour labeled data 
    
        manual_labels_path    = [common_behav_dir '\' behaviour '_analyses\' RFM_model_name '\manually_labeled_data\'];   % data with frames manually labeled as behaviour (to train model)
                                 mkdir(manual_labels_path);
        predicted_labels_path = [common_behav_dir '\' behaviour '_analyses\' RFM_model_name '\predicted_labels_data\'];   % data with behaviour labels predicted by model
                                 mkdir(predicted_labels_path);
        corrected_labels_path = [common_behav_dir '\' behaviour '_analyses\' RFM_model_name '\corrected_labeled_data\'];   % predcited_labvelds data which was manually corrected        
                                 mkdir(corrected_labels_path);

                                 addpath(genpath([common_behav_dir '\' behaviour '_analyses\' RFM_model_name ])); % adds new model folder and subfolders to matlab path

 % 2. Define directories to where models shall be saved (both the SSM and RFM will be saved here)
        model_path =  [common_behav_dir '\models\']; 
                       mkdir(model_path);
            SSM_model_name_path = [model_path SSM_model_name]; % automatically defines path to find SSM model
            RFM_model_name_path = [model_path RFM_model_name]; % automatically defines path to find SSM model


 % 3. Extract DLC data files and count them 
        all_DLC_files = dir(fullfile(DLC_data_path, '*mouse*')); % makes a struct containing details of all DLC files 
        all_SSM_files = dir(fullfile(SSM_data_path, '*mouse*')); % makes a struct containing details of all SSM fitted files 
        num_files = length(all_DLC_files);                   % identifies number of files (for each mouse two files so 2x nr. of mice)

%% Exacting low-velocity frames via tresholding Euclidian distance travelled between frames 

% define body marker based on which euclidian distance shall be calculated
  body_marker = 5;  % nose = 1
                    % right ear = 2
                    % left ear = 3
                    % neck base = 4
                    % body anterior = 5
                    % body posterior = 6
                    % tail base = 7
                    % right eye = 8
                    % left eye = 9



for i = 1:num_files
    
    filename = all_SSM_files(i).name;
    load([SSM_data_path filename], 'Xfit') % loads coordinates of all body markers generated by 2D-upper (corrected fir outliers)

    x_data = squeeze(Xfit(body_marker,1,:)); % extracts x coordinats of the defines body marker
    y_data = squeeze(Xfit(body_marker,2,:)); % extracts y coordinats of the defines body marker

    dist = [0; sqrt(diff(x_data).^2 + diff(y_data).^2)]; % calculates euclidian distance travelled frame-to-frame 
    dist = dist';

    % define everything below velocity threshold as freezing
            freezing_velocity_threshold = 1.1; % pixels per frame, change as needed (*0.048*15 to get cm/s value)
            prior_freezing_selection = dist < freezing_velocity_threshold; 

    % define everything above duration threshold as freezing
            % Identify continuous segments of 1s (behavior)
              [labeled_behaviour, num_segments] = bwlabel(prior_freezing_selection);
            % Extract properties of each segment (length of consecutive 1s)
              segment_props = regionprops(labeled_behaviour, 'Area');
            
            % Define minimum duration threshold !!! DEFINE THE CUTOFF BASED ON TYPICAL DURATION OF BEHAVIOUR !!! 
                  duration_threshold = 15;  % for freezing (1 sec)
            
            % Iterate over detected darting sequences
            for segment = 1:num_segments
                if segment_props(segment).Area < duration_threshold    
        
                    prior_freezing_selection(labeled_behaviour == segment) = 0; % Replace short darting sequences with 0s
                end
            end


    

  

end



